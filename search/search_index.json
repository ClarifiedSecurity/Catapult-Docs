{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Enter the Catapult","text":"<p>This is the documentation for the Catapult project. It and the documentation is a work in progress and gets dynamically updated as the project evolves.</p> <p>Check the left sidebar for already existing the documentation.</p> <p>&lt;---------------</p>"},{"location":"catapult/01-installation/","title":"Installation","text":"<p>Catapult can run in <code>Linux</code>, <code>Windows (WSL)</code> or <code>MacOS</code>. Recommended host OS is Ubuntu 22.04 LTS. For Windows follow the Windows Subsystem for Linux section to pre-configure WSL and then return to Quickstart.</p>"},{"location":"catapult/01-installation/#quickstart","title":"Quickstart","text":"<ul> <li>Make sure all of the SSH keypairs you need are loaded into your ssh-agent. Catapult will use them to connect to the VMs.</li> <li>Make sure you have <code>git</code> installed.</li> <li>Run the following commands to install and configure Catapult:</li> </ul> <pre><code>git clone https://github.com/ClarifiedSecurity/catapult --depth 1\ncd catapult\n./install.sh\n</code></pre> <ul> <li>You can run <code>./install.sh</code> multiple times until it finishes without errors.</li> </ul> <p>If you didn't configure Keepass automatically during the installation then fill out missing vars in <code>.makerc-vars</code>. Read the comments for each variable for more information. All of the <code>KEEPASS_*</code> variables are case sensitive.</p>"},{"location":"catapult/01-installation/#windows-subsystem-for-linux","title":"Windows Subsystem for Linux","text":"<p>Log in interactively (over RDP or locally) to your Windows machine with an account that has admin rights and run the following commands in PowerShell. The first login needs to be with an admin account because the WSL installation needs to be done with admin rights. After the first installation you can use a non-admin account to log in.</p> <pre><code>Enable-WindowsOptionalFeature -FeatureName Microsoft-Windows-Subsystem-Linux -Online -NoRestart\nwsl --install\n</code></pre> <ul> <li>Restart Windows</li> <li>If your user account IS in the Administrators group just log in, start Ubuntu from the start menu and follow the instructions to finalize the setup.</li> <li>If your user account IS NOT in the Administrators group you need to run the following commands in non-admin PowerShell after your login:</li> </ul> <pre><code>wsl --update\nwsl --install -d Ubuntu\n</code></pre> <ul> <li> <p>After that follow the instructions to finalize the setup.</p> </li> <li> <p>Make sure all needed SSH keypairs are in <code>~/.ssh</code> folder in the WSL Ubuntu and ssh-agent is started. For easy-to-use SSH Agent you can follow this guide. You can use this method to add multiple keys to the SSH Agent.</p> </li> </ul> <p>When WSL is configured successfully then I'll show up in Windows Explorer as a network drive. You can use it to copy files between your host and the WSL system. On Windows we suggest using VSCode with the Remote - WSL extension to edit the files in WSL and Windows Terminal for easy connection to WSL.</p> <ul> <li>When your Ubuntu shell is ready, return to Quickstart</li> </ul>"},{"location":"catapult/01-installation/#caveats","title":"Caveats","text":"<p>If you are using a Linux VM with a user ID that is not 1000 (you can check it with the <code>id</code> command) you need to build the Catapult Docker image yourself with the <code>make build</code> command.</p>"},{"location":"catapult/02-how-to-use/","title":"How to use","text":""},{"location":"catapult/02-how-to-use/#enter-the-catapult","title":"Enter the Catapult","text":"<ul> <li>Start the Catapult container and connect to it with:</li> </ul> <pre><code>make start\n</code></pre> <ul> <li>Connect to an already started Catapult container with:</li> </ul> <pre><code>make shell\n</code></pre> <p>Once inside the Catapult container you can type <code>ctp-</code> and use the tab key to see all of the available commands, here is also list of all commands with examples:</p>"},{"location":"catapult/02-how-to-use/#general-commands","title":"General commands","text":"<ul> <li>Installs all Ansible roles, collections and Python dependencies (useful for development)</li> </ul> <pre><code>ctp-install-all-requirements\n</code></pre> <ul> <li>Installs only Ansible roles &amp; collections from files that are NOT named requirements.yml under /srv/requirements folder (useful for development).</li> </ul> <pre><code>ctp-install-custom-requirements\n</code></pre> <ul> <li>Lists all available projects under /srv/inventories and allows you to select one</li> </ul> <pre><code>ctp-select-project\n</code></pre>"},{"location":"catapult/02-how-to-use/#deploy-commands","title":"Deploy commands","text":"<p>Examples for the deploy commands are done with one machine but you can use the same commands with multiple machines by using the <code>all</code> keyword or a group_var. Use Ansible's documentation for Advanced deploy patterns</p>"},{"location":"catapult/02-how-to-use/#ctp-deploy","title":"ctp-deploy","text":"<p>Run the full playbook and creates the VM if it doesn't exist</p> <p>Example usage:</p> <ul> <li>Deploys the VM with the given inventory_hostname</li> </ul> <pre><code>ctp-deploy &lt;inventory_hostname&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-redeploy","title":"ctp-redeploy","text":"<p>Destroys the existing VM and runs the the <code>ctp-deploy</code> command</p> <p>Example usage:</p> <ul> <li>Redeploys the VM with the given inventory_hostname</li> </ul> <pre><code>ctp-redeploy &lt;inventory_hostname&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-deploy-until-configuration","title":"ctp-deploy-until-configuration","text":"<p>Deploys the machine, stops the play after os_configuration role and creates a snapshot. This is a useful command if you want to create a snapshot of the VM after the OS is installed and configured. You can then use the snapshot to speed up the deployment/development process. You can deploy multiple machines that depend on each other in parallel and use the <code>ctp-deploy-from-configuration</code> to configure them in the correct order afterwards.</p> <p>Example usage:</p> <ul> <li>Deploys the VM with the given inventory_hostname and creates a snapshot</li> </ul> <pre><code>ctp-deploy-until-configuration &lt;inventory_hostname&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-redeploy-until-configuration","title":"ctp-redeploy-until-configuration","text":"<p>Redeploys the machine, stops the play after os_configuration role and creates a snapshot. This is a useful command if you want to create a snapshot of the VM after the OS is installed and configured. You can then use the snapshot to speed up the deployment/development process. You can deploy multiple machines that depend on each other in parallel and use the <code>ctp-deploy-from-configuration</code> to configure them in the correct order afterwards.</p> <p>Example usage:</p> <ul> <li>Redeploys the VM with the given inventory_hostname and creates a snapshot</li> </ul> <pre><code>ctp-redeploy-until-configuration &lt;inventory_hostname&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-deploy-from-configuration","title":"ctp-deploy-from-configuration","text":"<p>Starts the play from /srv//pre_vm_role part of the playbook and runs until the end. This is a useful command during mass deploy when you have run the <code>ctp-deploy-until-configuration</code> first and then you want to configure the cloned machines. Should anything go wrong you can always revert to the snapshot and start again. <p>Example usage:</p> <ul> <li>Starts configuring the VM with the given inventory_hostname from the pre_vm_role.</li> </ul> <pre><code>ctp-deploy-from-configuration &lt;inventory_hostname&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-deploy-role","title":"ctp-deploy-role","text":"<p>Runs only the /srv//vm/ part of the playbook and then stops. This is a useful during role developing and or when you want to minimize the time it takes to configure something. For an example only reconfiguring the user accounts of the machine by using single_role with <code>clarified.core.accounts</code> role. <p>Example usage:</p> <ul> <li>Only runs the role for inventory_hostname and then stops the play can also be used against all or group_var</li> </ul> <pre><code>ctp-deploy-role &lt;inventory_hostname&gt;\n</code></pre> <ul> <li>Looks for role under <code>/srv/&lt;project_name&gt;/roles/&lt;role&gt;</code> and only runs it.</li> </ul> <pre><code>ctp-deploy-role &lt;inventory_hostname&gt; -e single_role=&lt;role&gt;\n</code></pre> <ul> <li>Looks for role with the fully qualified role name (FQCN) in the installed collections and only runs that and stops</li> </ul> <pre><code>ctp-deploy-role &lt;inventory_hostname&gt; -e single_role=&lt;role.fqcn&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-deploy-network","title":"ctp-deploy-network","text":"<p>Runs ctp-deploy and also includes networks configuration role</p> <p>Example usage:</p> <ul> <li>Deploys the VM with the given inventory_hostname and also configures the networks</li> </ul> <pre><code>ctp-deploy-network &lt;inventory_hostname&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-deploy-fresh","title":"ctp-deploy-fresh","text":"<p>Runs deploy as if the machine does not exist. This can be useful when deploy has failed before configuring accounts. Use this command to deploy the machine again as if it didn't exist and thus use the default values for the accounts.</p> <p>Example usage:</p> <ul> <li>Deploys the VM with the given inventory_hostname as if it didn't exist</li> </ul> <pre><code>ctp-deploy-fresh &lt;inventory_hostname&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-remove","title":"ctp-remove","text":"<p>Destroys the existing VM</p> <p>Example usage:</p> <ul> <li>Destroys the VM with the given inventory_hostname</li> </ul> <pre><code>ctp-remove &lt;inventory_hostname&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-rebuild-linode-vm","title":"ctp-rebuild-linode-vm","text":"<p>Rebuilds the existing Linode VM with a new disk but keeps the existing IP</p> <p>Example usage:</p> <ul> <li>Rebuilds the VM with the given inventory_hostname</li> </ul> <pre><code>ctp-rebuild-linode-vm &lt;inventory_hostname&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#deploy-commands-based-on-startretry-file","title":"Deploy commands based on @start.retry file","text":"<p>Whenever a deploy fails a start.retry file is created under /srv/inventories//start.retry. Instead of going trough the logs to find what machines failed you can use the following commands to deploy only the failed machines. Keep in mind that only that latest fail is written into the start.retry file so when running multiple instances of Catapult (using <code>make shell</code> multiple times) and multiple deploys in parallel the latest fail will be written into the start.retry file. <ul> <li>Run <code>ctp-deploy</code> on failed machines based on start.retry file</li> </ul> <pre><code>ctp-retry-deploy\n</code></pre> <ul> <li>Run <code>ctp-redeploy</code> failed machines based on start.retry file</li> </ul> <pre><code>ctp-retry-redeploy\n</code></pre> <ul> <li>Runs <code>ctp-deploy-until-configuration</code> on failed machines based on start.retry file</li> </ul> <pre><code>ctp-retry-deploy-until-configuration\n</code></pre> <ul> <li>Runs <code>ctp-redeploy-until-configuration</code> on failed machines based on start.retry file</li> </ul> <pre><code>ctp-retry-redeploy-until-configuration\n</code></pre> <ul> <li>Run <code>ctp-deploy-from-configuration</code> on failed machines based on start.retry file</li> </ul> <pre><code>ctp-retry-deploy-from-configuration\n</code></pre> <ul> <li>Run <code>ctp-deploy-role</code> on failed machines based on start.retry file</li> </ul> <pre><code>ctp-retry-deploy-role\n</code></pre>"},{"location":"catapult/02-how-to-use/#snapshot-modes","title":"Snapshot modes","text":"<p>Different commands for managing machine snapshots. Note that the commands might not work with all providers. In that case you will receive a message that the command not implemented for the provider.</p>"},{"location":"catapult/02-how-to-use/#ctp-snapshot","title":"ctp-snapshot","text":"<p>Create a snapshot of the VM</p> <p>Example usage:</p> <ul> <li>Creates a snapshot of the VM for the given inventory_hostname with the default snapshot name</li> </ul> <pre><code>ctp-snapshot &lt;inventory_hostname&gt;\n</code></pre> <ul> <li>Creates a snapshot of the VM for the given inventory_hostname with the given snapshot name</li> </ul> <pre><code>ctp-snapshot &lt;inventory_hostname&gt; -e snapshot_name=&lt;snapshot_name&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-clean-snapshot","title":"ctp-clean-snapshot","text":"<p>Remove all existing snapshots and create a new snapshot of the VM</p> <p>Example usage:</p> <ul> <li>Removes all existing snapshots and creates a new snapshot of the VM for the given inventory_hostname</li> </ul> <pre><code>ctp-clean-snapshot &lt;inventory_hostname&gt;\n</code></pre> <ul> <li>Removes all existing snapshots and creates a new snapshot of the VM for the given inventory_hostname with the given snapshot name</li> </ul> <pre><code>ctp-clean-snapshot &lt;inventory_hostname&gt; -e snapshot_name=&lt;snapshot_name&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-live-snapshot","title":"ctp-live-snapshot","text":"<p>Creates a snapshot of a running machine including memory, mostly applicable to VMware products</p> <p>Example usage:</p> <ul> <li>Creates a live snapshot of the VM for the given inventory_hostname</li> </ul> <pre><code>ctp-live-snapshot &lt;inventory_hostname&gt;\n</code></pre> <ul> <li>Creates a live snapshot of the VM for the given inventory_hostname with the given snapshot name</li> </ul> <pre><code>ctp-live-snapshot &lt;inventory_hostname&gt; -e snapshot_name=&lt;snapshot_name&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-revert","title":"ctp-revert","text":"<p>Revert to the latest default snapshot or to the given snapshot name</p> <p>Example usage:</p> <ul> <li>Reverts the VM for the given inventory_hostname to the latest default snapshot</li> </ul> <pre><code>ctp-revert &lt;inventory_hostname&gt;\n</code></pre> <ul> <li>Reverts the VM for the given inventory_hostname to the given snapshot name</li> </ul> <pre><code>ctp-revert &lt;inventory_hostname&gt; -e snapshot_name=&lt;snapshot_name&gt;\n\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-remove-snapshot","title":"ctp-remove-snapshot","text":"<p>Removing snapshot, requires -e snapshot_name=snapshot_name_to_remove</p> <p>Example usage:</p> <ul> <li>Removes the snapshot for the given inventory_hostname</li> </ul> <pre><code>ctp-remove-snapshot &lt;inventory_hostname&gt; -e snapshot_name=snapshot_name_to_remove\n</code></pre> <ul> <li>Removes all snapshots for the given inventory_hostname</li> </ul> <pre><code>ctp-remove-snapshot &lt;inventory_hostname&gt; -e remove_all_snapshots=true\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-rename-snapshot","title":"ctp-rename-snapshot","text":"<p>Renaming snapshot, requires -e snapshot_name=existing_snapshot_name_to_rename -e new_snapshot_name=new_snapshot_name</p> <p>Example usage:</p> <ul> <li>Renames the snapshot for given inventory_hostname machine</li> </ul> <pre><code>ctp-rename-snapshot &lt;inventory_hostname&gt; -e snapshot_name=existing_snapshot_name_to_rename -e new_snapshot_name=new_snapshot_name\n</code></pre>"},{"location":"catapult/02-how-to-use/#power-state","title":"Power state","text":"<p>These commands are for managing the power state of the VMs. Without connection to them over SSH. For an example using VMTools on VMware products.</p>"},{"location":"catapult/02-how-to-use/#ctp-poweron","title":"ctp-poweron","text":"<p>Power on VM</p>"},{"location":"catapult/02-how-to-use/#ctp-restart","title":"ctp-restart","text":"<p>Restart VM</p>"},{"location":"catapult/02-how-to-use/#ctp-shutdown","title":"ctp-shutdown","text":"<p>Shut down VM (graceful shutdown)</p>"},{"location":"catapult/02-how-to-use/#ctp-poweroff","title":"ctp-poweroff","text":"<p>Power off VM (ungraceful shutdown)</p>"},{"location":"catapult/02-how-to-use/#ctp-reset","title":"ctp-reset","text":"<p>Reset VM (very ungraceful)</p> <p>Example usage:</p> <ul> <li>Powers on the VM for the given inventory_hostname</li> </ul> <pre><code>ctp-poweron &lt;inventory_hostname&gt;\n</code></pre> <ul> <li>Restarts the VM for the given inventory_hostname</li> </ul> <pre><code>ctp-restart &lt;inventory_hostname&gt;\n</code></pre> <ul> <li>Shuts down the VM for the given inventory_hostname</li> </ul> <pre><code>ctp-shutdown &lt;inventory_hostname&gt;\n</code></pre> <ul> <li>Powers off the VM for the given inventory_hostname</li> </ul> <pre><code>ctp-poweroff &lt;inventory_hostname&gt;\n</code></pre> <ul> <li>Resets the VM for the given inventory_hostname</li> </ul> <pre><code>ctp-reset &lt;inventory_hostname&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#misc-commands","title":"MISC commands","text":""},{"location":"catapult/02-how-to-use/#ctp-update-os","title":"ctp-update-os","text":"<p>Runs only the clarified.core.updates role on the given targets. Useful for only updating the OS packages.</p> <p>Example usage:</p> <ul> <li>Updates the OS packages for the given inventory_hostname</li> </ul> <pre><code>ctp-update-os &lt;inventory_hostname&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-list","title":"ctp-list","text":"<p>List the inventory_hostnames for the given project, group_var or just to check if the inventory_hostname is valid. This command is useful to use a a pre-check before running any of the other commands. You can make sure that your advanced regex is correct and you don't run the command on the wrong inventory_hostname.</p> <p>Example usage:</p> <ul> <li>Checks if the inventory_hostnames exists</li> </ul> <pre><code>ctp-list &lt;inventory_hostname&gt;\n</code></pre> <ul> <li>Lists all of the inventory_hostnames for the given project</li> </ul> <pre><code>ctp-list all\n</code></pre> <ul> <li>Lists all of the inventory_hostnames for the given group_var</li> </ul> <pre><code>ctp-list &lt;group_var&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-list-vars","title":"ctp-list-vars","text":"<p>List (most) of the variables for the given inventory_hostname. This command is useful to check what variables are available in the given inventory_hostname. It is not a complete list of all the variables because of home some host_vars get loaded but it's useful when getting started with the role development.</p> <p>Example usage:</p> <ul> <li>Lists the variables for the given inventory_hostname</li> </ul> <pre><code>ctp-list-vars &lt;inventory_hostname&gt;\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-rename-vm","title":"ctp-rename-vm","text":"<p>Renaming VM. This command is useful when the naming scheme for the VMs has changed and you want to rename some or all of them for the project.</p> <p>Example usage:</p> <ul> <li>Renames the VM for the given inventory_hostname with the given values</li> </ul> <pre><code>ctp-rename-vm &lt;inventory_hostname&gt; -e old_vm_name=&lt;old_name&gt; -e new_vm_name=&lt;new_name&gt;\n</code></pre> <ul> <li>Renames the VM for the given inventory_hostname where the old name is the current value defined in</li> </ul> <pre><code>cpp-rename-vm &lt;inventory_hostname&gt; -e new_vm_name=&lt;new_name&gt;the group or host vars\n</code></pre>"},{"location":"catapult/02-how-to-use/#ctp-get-ip","title":"ctp-get-ip","text":"<p>Getting the IP's and FQDN of the VM</p> <p>Example usage:</p> <ul> <li>Gets the IP's and FQDN of the VM for the given inventory_hostname</li> </ul> <pre><code>ctp-get-ip &lt;inventory_hostname&gt;\n</code></pre>"},{"location":"catapult/03-how-to-customize/","title":"How to customize","text":"<p>Catapult has 2 modes of customization:</p> <ul> <li>Personalization - Where users can set their own preferences that will only affect them.</li> <li>Customization - Where preferences are configured in a way that they apply to all users.</li> </ul>"},{"location":"catapult/03-how-to-customize/#personalization","title":"Personalization","text":"<p>There are 2 ways to personalize Catapult:</p>"},{"location":"catapult/03-how-to-customize/#personal-docker-compose-file","title":"Personal Docker Compose file","text":"<p><code>docker/docker-compose-personal.yml</code> - This file is used to add to, or override the default configuration values defined in <code>docker/docker-compose.yml</code>.</p> <p>Potential use cases for this file include:</p> <ul> <li>Mounting custom shell rc files (currently only .zshrc supported)</li> <li>Using environmental variables to override default Ansible values that come from <code>ansible.cfg</code></li> <li>Mounting custom files into the container</li> </ul>"},{"location":"catapult/03-how-to-customize/#personal-aliases-file","title":"Personal aliases file","text":"<p><code>container/home/builder/.personal_aliases</code> - This file is used to add custom aliases that will only be available to the user.</p> <p>Potential use cases for this file include:</p> <ul> <li>Adding custom aliases that are not available in the default aliases file</li> <li>Adding aliases that are specific to the user</li> </ul>"},{"location":"catapult/03-how-to-customize/#customization","title":"Customization","text":"<p>To customize Catapult for all users, a separate git project needs to be created that contains all of the required files. Then users need to point to that project using the <code>MAKEVAR_CATAPULT_CUSTOMIZER_REPO</code> variable in their <code>.makerc-vars</code> file. For a full list of available options, see the example Catapult Customizer repo.</p>"},{"location":"catapult/04-template-requirements/","title":"VM Template Requirements","text":"<p>When using Catapult with a cloud provider you can just use the VM templates provided by the cloud provider. When using Catapult in your own private cloud you need to make sure that the VM templates your create are compatible with Catapult.</p> <p>One really good tool for template generation is Packer. Packer can be used to create base images for all major cloud providers and also for local virtualization solutions like VirtualBox or VMWare. We recommend using Packer or manually creating base images for yourself and then using Catapult to create per-environment/project/datacenter etc. VM templates from those base images.</p>"},{"location":"catapult/04-template-requirements/#base-template-requirements","title":"Base template requirements","text":""},{"location":"catapult/04-template-requirements/#windows","title":"Windows","text":"<ul> <li> <p>Latest stable OpenSSH installed and running -- Catapult does all of its work over SSH. Don't use the built-in Windows SSH server it's versions are different per OS version and you will start getting random connection errors.</p> </li> <li> <p><code>MaxAuthTries</code> set to <code>20</code> in <code>C:/ProgramData/ssh/sshd_config</code> -- A lot of users will have more than 6 keys in their SSH agent and the default <code>MaxAuthTries</code> of 6 will cause Catapult to fail to connect to the VM. The value must not be 20 but it most likely must be higher than 6.</p> </li> <li> <p>(Optional) Chocolatey installed -- It's not a hard requirement but it's really useful to have Chocolatey installed on your Windows VMs. Catapult can use Chocolatey to install the required software on the VMs. Chocolatey can also be used to install the OpenSSH server on the base template with <code>choco install openssh -params /SSHServerFeature -y</code></p> </li> </ul>"},{"location":"catapult/04-template-requirements/#linux","title":"Linux","text":"<ul> <li> <p>SSH server installed and running -- Catapult does all of its work over SSH.</p> </li> <li> <p><code>MaxAuthTries</code> set to <code>20</code> in <code>/etc/ssh/sshd_config</code> -- Same as with Windows.</p> </li> <li> <p><code>PermitRootLogin</code> set to <code>yes</code> in <code>/etc/ssh/sshd_config</code> -- Catapult needs to be able to login as root to the VMs the first time. After that Catapult can be used to create new accounts and disable root login.</p> </li> </ul>"},{"location":"catapult/04-template-requirements/#per-environmentprojectdatacenter-etc-template-requirements","title":"Per-environment/project/datacenter etc. template requirements","text":"<p>We recommend applying the template_os_configuration the specific project templates. It contains some prerequisites for different <code>clarified.core</code> roles that you might otherwise need to install before using those roles.</p>"},{"location":"catapult/90-set-up-keepass/","title":"KeePassXC setup","text":""},{"location":"catapult/90-set-up-keepass/#installation","title":"Installation","text":"<p>Catapult uses KeePassXC to store your personal secrets. Keepass is needed to store your LDAP/AD credentials, your personal API keys, your SSH keypairs etc. Catapult will not work without a KeePass database.</p> <p>Catapult will offer to create a Keepass database for you but you can follow these steps to set up your KeePass database manually:</p> <ul> <li>Install KeePassXC on your computer, it's available for all major platforms, just check your package manager or download it directly from the KeePassXC website.</li> <li>Run the KeePassXC application and create a new database.</li> <li>When you get to the <code>Database Credentials</code> part make sure to add a password and also click the <code>Add additional protection...</code> button and generate a key file and save it in your host.</li> <li>As a final step also save your database file to your host.</li> <li>When unlocking your database make sure to also point the the generated key file.</li> </ul>"},{"location":"catapult/91-generate-ssh-keypair/","title":"Generate SSH keys","text":"<p>Catapult works by mounting your host ssh agent into the container. This means that you need to have your ssh keys in your host ssh agent. Here is a good guide on how to generate SSH keys and add them to your ssh agent.</p>"},{"location":"catapult/92-contributing/","title":"Contributing guidelines","text":"<p>When seeking to contribute to this project, please keep the following in mind:</p> <ul> <li> <p>When something is is not working as expected and you don't know how to fix it, please open an issue. The project(s) are under active development and we might miss something but will try to fix all of the issues we are aware of.</p> </li> <li> <p>When you see something that could be improved and you know how to do it you can create fork of the project, make the required changes and create a pull request. We might not accept all pull requests, or we might ask you to make some changes before we do. This is not a reflection on you as a developer, but rather a reflection on the direction of the project. If you are unsure about whether or not to make a pull request, you can always open an issue first and ask.</p> </li> <li> <p>When committing code, please make it in small, logical chunks. This makes it easier for us to review and accept your changes. Also make sure that your commit messages are clear and concise. The goal of the commit messages is to create a readable changelog. The commit messages must contain the following three components:</p> </li> <li>What was changed</li> <li>Where it was changes</li> <li>Why it was changed (when applicable)</li> </ul> <p>Examples:</p> <ul> <li> <p>Updated the default Ansible version in pyproject.toml file.</p> </li> <li> <p>Updated the docker-entrypoint.sh script to avoid race condition for certificate updates.</p> </li> </ul>"},{"location":"catapult-customizer/","title":"Catapult Customizer Example","text":"<p>This is an example repo to show how to Customize Catapult for your organization's or project's needs. To use this repo you need to create your own Git project (in a Git server of your choice) and then fill it out with the examples shown here. After that is done fill out <code>MAKEVAR_CATAPULT_CUSTOMIZER_REPO</code> in your Catapult's <code>.makerc-vars</code> file to include the customizations.</p> <p>DELETE ALL CUSTOMIZATION FOLDER AND FILE EXAMPLES THAT YOU WILL NOT BE USING - Otherwise empty folder will be included overriding the default files.</p> <p>The structure of the customization repo is as follows:</p>"},{"location":"catapult-customizer/#folders","title":"Folders","text":"<ul> <li> <p><code>certificates</code> - Contains the trusted certificate files that will be installed into the container. The certificate format must be base64 and the file name format must be .crt <li> <p><code>container</code> - Contains .custom_aliases file that will be copied into the container. Refer to the .default_aliases file as an example on how to create .custom_aliases.</p> </li> <li> <p><code>docker</code> - Contains custom docker-compose-extra.yml to add extra environment variables to the container. Refer to the default docker-compose-extra.yml for an example. Also contains docker-compose-personal.yml that will be created on first run. This file is used to store personal environment variables that you don't want to commit to the repo.</p> </li> <li> <p><code>docker-entrypoints</code> - Contains custom docker-entrypoint scripts that will run inside the container during startup and <code>make shell</code>. Refer to default entrypoint scripts for examples.</p> </li> <li> <p><code>makefiles</code> - Contains custom .makerc* files specific to your organization or project. Refer to the default .makerc file for examples and the Makefile for different types of makefiles that get loaded if they exists.</p> </li> <li> <p><code>poetry</code> - Contains custom pyroject.toml and poetry.lock files that will be used to install the Python dependencies when building your own image. Refer to the defaults pyproject.toml for examples.</p> </li> <li> <p><code>requirements</code> - Contains different *.yml files that will be used to install the Ansible roles and collections. Refer to Ansible docs or default requirements for how-to guide or examples.</p> </li> <li> <p><code>scripts</code> - Contains custom scripts that will be used with the project.</p> </li> <li> <p><code>start-tasks</code> - Contains scripts that will be run on the host during container startup. Refer to existing start-tasks for examples.</p> </li>"},{"location":"catapult-customizer/#files","title":"Files","text":"<ul> <li> <p><code>example.makerc-vars</code> - When using non-default .makerc-vars then make sure that `example.makerc-vars is also defined in the Catapult Customizer repo because there are helper scripts that will check if your .makerc-vars contains all of the variables based on the example.makerc-vars.</p> </li> <li> <p><code>start.yml</code> - In some rare cases you might want to customize the deployment tree of Catapult. For that you can create your own start.yml file and it will be used instead of the default one. Refer to the default start.yml as an example.</p> </li> </ul>"},{"location":"clarified-core-collection/accounts/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/accounts/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/accounts/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/accounts/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/accounts/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/accounts/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/accounts/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/cleanup/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/cleanup/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/cleanup/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/cleanup/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/cleanup/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/cleanup/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/cleanup/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/configure_networking/","title":"configure_networking","text":"<p>This is a role to configure networking for a VM after cloning. Currently it is only supporting network configuration for VMs deployed on VMware vSphere, but the scripts are more or less universal and can be modified to add support to different hypervisors. Here is a list of all supported network methods.</p>"},{"location":"clarified-core-collection/configure_networking/#requirements","title":"Requirements","text":"<p>None</p>"},{"location":"clarified-core-collection/configure_networking/#role-variables","title":"Role Variables","text":"<p>The variable structure is based on Providentia API output. When using file based inventory then make sure to follow the same structure. Check the example blow for more details.</p>"},{"location":"clarified-core-collection/configure_networking/#dependencies","title":"Dependencies","text":"<p>None</p>"},{"location":"clarified-core-collection/configure_networking/#example","title":"Example","text":"<p>When not using Providentia define the the network configuration in host/group/etc vars in the following format:</p> <pre><code># Example on how to configure single network interface with static IPv4 and IPv6 addresses and an extra IPv6 address for management traffic\n# You can remove the addresses you don't need\n# Any undefined value leave to null to avoid errors\ninterfaces:\n  - network_id: my-network-name # Some type of identifiable name. It'll be used for an example in netplan and nmcli interface name\n    cloud_id: my-cloud-name # This is a vSphere portgroup name\n    domain: my.domain.com\n    fqdn: my-host.my.domain.com # FQDN of the VM where the network will be configured\n    egress: true # Whether the network is used for egress traffic (connecting to the internet)\n    connection: true # Whether the network is used for management traffic (connecting over ssh)\n    addresses:\n      - pool_id: default-ipv4 # IP pool name\n        mode: ipv4_static # IP address mode leave as it is\n        connection: false # Whether this IP address is used for management traffic\n        address: 192.168.0.0/24 # IP address and subnet mask\n        dns_enabled: true # Whether this IP will be registered in DNS (Requires some type of DNS integration)\n        gateway: 192.168.0.1 # Gateway IP address\n\n      - pool_id: default-ipv6 # IP pool name\n        mode: ipv6_static # IP address mode leave as it is\n        connection: false # Whether this IP address is used for management traffic\n        address: 2001:0db8:85a3:0000:0000:8a2e:0370:7334/64 # IP address and prefix\n        dns_enabled: true # Whether this IP will be registered in DNS (Requires some type of DNS integration)\n        gateway: 2001:0db8:85a3:0000:0000:8a2e:0370:7331 # Gateway IP address\n\n      - pool_id: mgmt-ipv6 # IP pool name make sure it contains mgmt\n        mode: ipv6_static # IP address mode leave as it is\n        connection: true # Whether this IP address is used for management traffic\n        address: fd00:1234:5678:abcd::1234/64 # IP address and prefix\n        dns_enabled: false # Whether this IP will be registered in DNS (Requires some type of DNS integration)\n        gateway: null # Gateway IP address\n</code></pre>"},{"location":"clarified-core-collection/connection/","title":"connection","text":"<p>This role is used to set connection parameters for the VM after cloning. It parses the correct parameters based on if the VM was just cloned or if it is already been customized. This role can also be used to connect to an already exiting virtual or physical machine. All of the connections are made over SSH.</p>"},{"location":"clarified-core-collection/connection/#requirements","title":"Requirements","text":"<p>Credentials for the VM to connect to. This can be either a username and password or a username and SSH key. The VM must also be configured to allow SSH connections.</p>"},{"location":"clarified-core-collection/connection/#role-variables","title":"Role Variables","text":"<p><code>template_username</code> - The username to connect the freshly cloned machine to run post-configuration there. Usually root or Administrator. <code>template_password</code> - The password to connect the freshly cloned machine to run post-configuration there. Usually root or Administrator. <code>connection_address</code> - The IP address of the machine to connect to.</p> <p><code>ansible_deployer_username</code> - The username to connect to the machine with once the post-configuration is complete. Usually something that gets created in the <code>clarified.core.accounts</code> role. <code>ansible_deployer_password</code> - The password to connect to the machine with once the post-configuration is complete. Usually something that gets created in the <code>clarified.core.accounts</code> role.</p>"},{"location":"clarified-core-collection/connection/#dependencies","title":"Dependencies","text":"<p>none</p>"},{"location":"clarified-core-collection/connection/#example","title":"Example","text":"<p>Since this role already gets included in <code>start.yml</code> there is no need to include it in your playbook. However, if you want to run it separately, you can do so with:</p> <pre><code>- name: Including connection role\n  include_role:\n    name: clarified.core.connection\n</code></pre>"},{"location":"clarified-core-collection/create/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/create/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/create/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/create/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/create/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/create/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/create/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/customization/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/customization/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/customization/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/customization/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/customization/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/customization/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/customization/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/customization_post_vm_role/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/customization_post_vm_role/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/customization_post_vm_role/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/customization_post_vm_role/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/customization_post_vm_role/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/customization_post_vm_role/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/customization_post_vm_role/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/customization_pre_role/","title":"customization_pre_role","text":"<p>This role gets loaded in start.yml before any connection is made to the Ansible inventory host. It can be used include roles that interact with different services or APIs directly from the Catapult container. It'll first check if a role name matching <code>pre_role</code> variable exists in <code>{{ inventory_dir }}/roles</code> and includes it. If no role exits it'll try to include the role based on the FQCN defined in <code>pre_role</code> variable. After the include role is complete the play stops.</p>"},{"location":"clarified-core-collection/customization_pre_role/#requirements","title":"Requirements","text":"<p><code>pre_role</code> variable must be defined</p>"},{"location":"clarified-core-collection/customization_pre_role/#role-variables","title":"Role Variables","text":"<p><code>pre_role</code> - role name in <code>{{ inventory_dir }}/roles</code> or role FQCN to be included.</p>"},{"location":"clarified-core-collection/customization_pre_role/#dependencies","title":"Dependencies","text":"<p>None</p>"},{"location":"clarified-core-collection/customization_pre_role/#example","title":"Example","text":"<p>Example on how the <code>pre_role</code> can be used to build snapshot aliases for Catapult</p>"},{"location":"clarified-core-collection/customization_pre_role/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/customization_pre_vm_role/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/customization_pre_vm_role/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/customization_pre_vm_role/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/customization_pre_vm_role/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/customization_pre_vm_role/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/customization_pre_vm_role/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/customization_pre_vm_role/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/customization_single_role/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/customization_single_role/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/customization_single_role/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/customization_single_role/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/customization_single_role/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/customization_single_role/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/customization_single_role/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/deploy_vars/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/deploy_vars/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/deploy_vars/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/deploy_vars/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/deploy_vars/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/deploy_vars/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/deploy_vars/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/docker/","title":"docker","text":"<p>This role installs Docker and Docker Compose on the target machine. By default it also configures IPv6 support for Docker and a default network with IPv6 support.</p>"},{"location":"clarified-core-collection/docker/#requirements","title":"Requirements","text":"<p>none</p>"},{"location":"clarified-core-collection/docker/#role-variables","title":"Role Variables","text":"<p>Refer to the defaults/main.yml file for a list of variables and their default values.</p>"},{"location":"clarified-core-collection/docker/#dependencies","title":"Dependencies","text":"<p>none</p>"},{"location":"clarified-core-collection/docker/#example","title":"Example","text":"<pre><code>- name: Including connection role\n  include_role:\n    name: clarified.core.docker\n</code></pre>"},{"location":"clarified-core-collection/finalize/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/finalize/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/finalize/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/finalize/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/finalize/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/finalize/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/finalize/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/generate_credentials/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/generate_credentials/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/generate_credentials/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/generate_credentials/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/generate_credentials/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/generate_credentials/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/generate_credentials/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/get_ip/","title":"get_ip","text":"<p>This role will look up the IP addresses (IPv4 &amp; IPv6) and FQDN of an Ansible inventory host and print them out.</p>"},{"location":"clarified-core-collection/get_ip/#requirements","title":"Requirements","text":"<p>None</p>"},{"location":"clarified-core-collection/get_ip/#role-variables","title":"Role Variables","text":"<p>None</p>"},{"location":"clarified-core-collection/get_ip/#dependencies","title":"Dependencies","text":"<p>None</p>"},{"location":"clarified-core-collection/get_ip/#example","title":"Example","text":"<pre><code># Include the role\n- name: Get IP address of host\n  ansible.builtin.include_role:\n    name: clarified.core.get_ip\n</code></pre> <pre><code># Include the role in meta\n---\n- dependencies:\n    - role: clarified.core.get_ip\n</code></pre> <pre><code># Use the alias in Catapult\nctp-get-ip &lt;inventory_hostname&gt;\n</code></pre>"},{"location":"clarified-core-collection/get_ip/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/join_domain/","title":"join_domain","text":"<p>This is a role for:</p> <ul> <li>Adding Windows and Linux hosts to Active Directory (AD) domains.</li> <li>Fixing broken AD domain joins and re-joining machines to domain.</li> </ul>"},{"location":"clarified-core-collection/join_domain/#requirements","title":"Requirements","text":"<p>Required an Active Directory domain controller to be installed and available.</p>"},{"location":"clarified-core-collection/join_domain/#role-variables","title":"Role Variables","text":""},{"location":"clarified-core-collection/join_domain/#required-variables","title":"Required Variables","text":"<ul> <li><code>domain</code> - Points to the AD domain name that matches your environments DNS domain.</li> <li><code>ad_domain_name</code> - Points to the AD domain name if it does NOT match your environments DNS domain.</li> <li><code>domain_admin_username</code> - Username of an account that has privileges to join computers to the domain and create/delete computer objects.</li> <li><code>domain_admin_password</code> - Password of the domain_admin_username.</li> </ul> <p>One special variable not defined in defaults is <code>computer_ou</code>. This variable is used to specify the OU where the computer object should be created. If this variable is not defined, the computer object will be created in the default Computers container.</p> <p>Refer to the defaults/main.yml file for a list of variables and their default values.</p>"},{"location":"clarified-core-collection/join_domain/#dependencies","title":"Dependencies","text":"<p>none</p>"},{"location":"clarified-core-collection/join_domain/#example","title":"Example","text":"<pre><code>- name: Joining domain\n  ansible.builtin.include_role:\n    name: clarified.core.join_domain\n\n- name: Joining domain with custom values\n  ansible.builtin.include_role:\n    name: clarified.core.join_domain\n  vars:\n    domain: example.com\n    computer_ou: OU=Computers,DC=example,DC=com\n\n- name: Joining domain with custom values and credentials\n  ansible.builtin.include_role:\n    name: clarified.core.join_domain\n  vars:\n    domain: example.com\n    computer_ou: OU=Computers,DC=example,DC=com\n    domain_join_user: domain_join_user # This is just the username. The domain name will be appended by the role.\n    domain_join_password: domain_join_password\n</code></pre>"},{"location":"clarified-core-collection/linux_xrdp_keyboard/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/linux_xrdp_keyboard/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/linux_xrdp_keyboard/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/linux_xrdp_keyboard/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/linux_xrdp_keyboard/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/linux_xrdp_keyboard/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/linux_xrdp_keyboard/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/linux_xrdp_server/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/linux_xrdp_server/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/linux_xrdp_server/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/linux_xrdp_server/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/linux_xrdp_server/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/linux_xrdp_server/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/linux_xrdp_server/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/nexus/","title":"nexus","text":"<p>This is a role for installing and configuring Nexus Repository Manager 3 on a in Docker on a Ubuntu/Debian host. This role can be used for following:</p> <ul> <li>Install Nexus with Docker Compose</li> <li>Run initial configuration of Nexus (optional)</li> <li>Install LDAP configuration for Nexus (optional)</li> </ul>"},{"location":"clarified-core-collection/nexus/#requirements","title":"Requirements","text":"<ul> <li>Tested on Ubuntu 22.04 but should work on any Debian based system.</li> <li>Requires an external reverse proxy (nginx, traefik, haproxy, caddy etc.) in front of Nexus to handle GUI access and TLS termination.</li> </ul>"},{"location":"clarified-core-collection/nexus/#role-variables","title":"Role Variables","text":"<p>Refer to defaults/main.yml for the full list of variables, their default values and descriptions.</p>"},{"location":"clarified-core-collection/nexus/#required-variables-for-installation","title":"Required Variables for Installation","text":"<ul> <li><code>docker_network</code></li> </ul>"},{"location":"clarified-core-collection/nexus/#required-variables-for-configuration","title":"Required Variables for Configuration","text":"<ul> <li><code>fqdn</code></li> <li><code>nexus_admin_password</code></li> </ul>"},{"location":"clarified-core-collection/nexus/#required-variables-for-ldap-configuration","title":"Required Variables for LDAP Configuration","text":"<ul> <li><code>nexus_ldap_name</code></li> <li><code>nexus_ldap_host</code></li> <li><code>nexus_ldap_search_base</code></li> <li><code>nexus_bind_user_dn</code></li> <li><code>nexus_bind_user_password</code></li> <li><code>nexus_group_dn_under_under_searchbase</code></li> <li><code>nexus_nexus_ldap_administrators_group</code></li> </ul> <p>Alternatively the whole <code>nexus_ldap_configuration</code> block can be defined as a single variable to configure LDAP. See defaults/main.yml for the full list of variables.</p>"},{"location":"clarified-core-collection/nexus/#dependencies","title":"Dependencies","text":"<ul> <li>Depends on Docker and Docker Compose being installed on the host. Docker can be installed using the clarified.core.docker role.</li> </ul>"},{"location":"clarified-core-collection/nexus/#example","title":"Example","text":"<pre><code># Installs Nexus without configuring it. Initial configuration can be done manually from the web GUI.\n- name: Installing Nexus...\n  ansible.builtin.include_role:\n    name: clarified.core.nexus\n\n# Installs Nexus and runs initial configuration on it.\n- name: Installing &amp; configuring Nexus...\n  ansible.builtin.include_role:\n    name: clarified.core.nexus\n    vars:\n      configure: true\n      nexus_admin_password: # lookup to a predefined password that will be applied to the admin user on first run\n\n# Installs Nexus and runs initial configuration on it and configures LDAP.\n- name: Installing &amp; configuring Nexus...\n  ansible.builtin.include_role:\n    name: clarified.core.nexus\n    vars:\n      configure: true\n      nexus_admin_password: # lookup to a predefined password that will be applied to the admin user on first run\n      configure_ldap: true\n      ldap_name: example.com\n      ldap_host: dc1.example.com\n      ldap_search_base: OU=ORG,DC=example,DC=com\n      bind_user_dn: CN=svc_nexus,OU=Service Accounts,OU=ORG,DC=example,DC=com\n      group_dn_under_under_searchbase: OU=Nexus,OU=Resources\n      bind_dn_password: # lookup to a predefined password for the svc_nexus user\n      nexus_ldap_administrators_group: Nexus Admins\n</code></pre>"},{"location":"clarified-core-collection/os_configuration/","title":"os_configuration","text":"<p>This is a universal role that is included in start.yml. It is used to run different general operating system configuration tasks. Such as configuring hostname, Windows activation, Linux host ssh keys and machine id regeneration etc.</p>"},{"location":"clarified-core-collection/os_configuration/#requirements","title":"Requirements","text":"<p>None</p>"},{"location":"clarified-core-collection/os_configuration/#role-variables","title":"Role Variables","text":"<p>Refer to defaults/main.yml for the full list of variables.</p>"},{"location":"clarified-core-collection/os_configuration/#dependencies","title":"Dependencies","text":"<p>None</p>"},{"location":"clarified-core-collection/os_configuration/#example","title":"Example","text":"<p>Since this role already gets included in <code>start.yml</code> there is no need to include it in your playbook. However, if you want to run it separately, you can do so with:</p> <pre><code>- name: Including os_configuration role\n  include_role:\n    name: clarified.core.os_configuration\n</code></pre>"},{"location":"clarified-core-collection/powerstate/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/powerstate/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/powerstate/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/powerstate/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/powerstate/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/powerstate/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/powerstate/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/rename_vm/","title":"rename_vm","text":"<p>Role for renaming existing VMs, useful for bulk rename.</p>"},{"location":"clarified-core-collection/rename_vm/#requirements","title":"Requirements","text":"<p>None</p>"},{"location":"clarified-core-collection/rename_vm/#role-variables","title":"Role Variables","text":"<p><code>old_vm_name</code> - The current name of the VM to be renamed. <code>new_vm_name</code> - The new name of the VM to be renamed.</p>"},{"location":"clarified-core-collection/rename_vm/#dependencies","title":"Dependencies","text":"<p>None</p>"},{"location":"clarified-core-collection/rename_vm/#example","title":"Example","text":"<pre><code># Rename single VM from Catapult command line\n# Looks up the current VM name and renames it to the new name\nctp-rename-vm &lt;inventory_hostname&gt; -e new_vm_name=&lt;new_vm_name&gt;\n</code></pre> <pre><code>- name: Name of the task\n  ansible.builtin.include_role:\n    name: clarified.core.rename_vm\n  vars:\n    new_vm_name: &lt;new_vm_name&gt; # Can use variable from group vars to template the new name format for bulk rename\n</code></pre>"},{"location":"clarified-core-collection/save_secrets/","title":"Role Name","text":"<p>This role is deprecated use clarified.core.secrets_to_vault instead.</p>"},{"location":"clarified-core-collection/secrets_to_vault/","title":"save_secrets","text":"<p>This is a role for saving secrets to Hashicorp Vault. It is has three modes of operation:</p> <ul> <li>User accounts passwords - Will generate (if needed) and save the password for items in <code>user_accounts</code>, <code>domain_user_accounts</code> &amp; <code>admin_accounts</code> lists to Vault.</li> <li>Pregenerated secrets - Secrets are generated by the role and passed in as list for the role and the roles saves them to Vault if they do not already exist.</li> <li>Autogenerated secrets - Secrets cannot be generated by the user but are generated automatically by some application and only shown once (API keys, tokens etc). In that case this role will save the secret to Vault overwriting any existing secret with the same name.</li> </ul> <p>Refer to clarified.core.accounts role for more information about the <code>user_accounts</code>, <code>domain_user_accounts</code> &amp; <code>admin_accounts</code> lists.</p>"},{"location":"clarified-core-collection/secrets_to_vault/#requirements","title":"Requirements","text":"<p>Vault server with LDAP authentication enabled needs to be running and accessible. It can be installed using the clarified.core.vault role.</p>"},{"location":"clarified-core-collection/secrets_to_vault/#role-variables","title":"Role Variables","text":"<p>Refer to defaults/main.yml for the full list of variables, their default values and descriptions.</p>"},{"location":"clarified-core-collection/secrets_to_vault/#required-variables","title":"Required Variables","text":"<ul> <li><code>secrets_vault_address</code> - Address of the Vault server ex. <code>https://vault.example.com</code></li> <li><code>secrets_vault_engine_path</code> - Path to the secrets engine in Vault ex. <code>kv</code></li> <li><code>secrets_vault_secrets_path</code> - Path to the under secrets under the secrets engine in Vault ex. <code>secrets</code></li> </ul>"},{"location":"clarified-core-collection/secrets_to_vault/#required-variables-for-accounts-passwords","title":"Required Variables for Accounts Passwords","text":"<ul> <li><code>save_secrets_to_vault: true</code> - Enable on a host or group_var to make sure that this role get's included in <code>start.yml</code> and items in <code>user_accounts</code>, <code>domain_user_accounts</code> &amp; <code>admin_accounts</code> lists are saved to Vault.</li> </ul>"},{"location":"clarified-core-collection/secrets_to_vault/#example","title":"Example","text":"<pre><code>- name: Generating secres and saving them to Vault...\n  ansible.buildin.include_role:\n    name: clarified.core.secrets_to_vault\n  vars:\n    secrets_vault_address: https://vault.example.com\n    secrets_vault_engine_path: kv\n    secrets_vault_secrets_path: secrets\n    secrets:\n      # Predefined secret to save to vault under kv/data/secrets\n      - key: secret1\n        value: password1\n      # Predefined secret with a random generated value to save to vault under kv/data/secrets\n      - key: secret2\n        value: \"{{ lookup('password', '/dev/null length=32 chars=hexdigits') }}\"\n      # Predefined secret with a random generated value by the the role kv/data/secrets\n      - key: secret3\n</code></pre>"},{"location":"clarified-core-collection/snapshots/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/snapshots/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/snapshots/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/snapshots/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/snapshots/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/snapshots/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/snapshots/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/template_os_configuration/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/template_os_configuration/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/template_os_configuration/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/template_os_configuration/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/template_os_configuration/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/template_os_configuration/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/template_os_configuration/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/trusted_certificates/","title":"trusted_certificates","text":"<p>This role installs trusted certificates on the target Windows, Linux or VyOS system. Trusted certificates are used to verify the identity of a remote system. This role is used to install certificates that are not part of the default trusted certificate store. The source of the certificates can be a file for url.</p>"},{"location":"clarified-core-collection/trusted_certificates/#requirements","title":"Requirements","text":"<p>The certificates must be in PEM (base64 encoded) format. The role will convert the certificates to the correct format for the target system.</p>"},{"location":"clarified-core-collection/trusted_certificates/#role-variables","title":"Role Variables","text":"<p>Refer to defaults/main.yml for the full list of variables.</p>"},{"location":"clarified-core-collection/trusted_certificates/#dependencies","title":"Dependencies","text":"<p>none</p>"},{"location":"clarified-core-collection/trusted_certificates/#example","title":"Example","text":"<pre><code># This example will install the RootCA certificate from the url http://example.com/pem and the SecondRootCA certificate from the local file SecondRootCA.cer. The certificates will also be added to the Java truststore.\n- name: Including trusted_certificates role...\n  ansible.builtin.include_role:\n    name: clarified.core.trusted_certificates\n  vars:\n    jks_truststore_name: true\n    trusted_certificates_list:\n      - name: RootCA\n        src: http://example.com/pem\n      - name: SecondRootCA\n        src: SecondRootCA.cer\n</code></pre>"},{"location":"clarified-core-collection/updates/","title":"updates","text":"<p>This role is used to update the operating system packages. Currently supported operating systems are: Ubuntu/Debian, Windows &amp; Arch Linux.</p> <p>Debian family operating systems can be configured to run unattended updates, with additional option to allow unattended reboots if required.</p>"},{"location":"clarified-core-collection/updates/#requirements","title":"Requirements","text":"<p>None</p>"},{"location":"clarified-core-collection/updates/#role-variables","title":"Role Variables","text":"<p>Refer to the defaults/main.yml file for a list of variables and their default values.</p>"},{"location":"clarified-core-collection/updates/#dependencies","title":"Dependencies","text":"<p>None</p>"},{"location":"clarified-core-collection/updates/#example","title":"Example","text":"<pre><code># Use the existing Catapult CLI alias to only run this role for a specific host.\nctp-update-os &lt;inventpry_hostname&gt;\n</code></pre> <pre><code># Use the role in a playbook.\n- name: Update the operating system\n  ansible.builtin.include_role:\n    name: clarified.core.updates\n</code></pre>"},{"location":"clarified-core-collection/vault/","title":"vault","text":"<p>This is a role for installing and configuring Hashicorp Vault. This role can be used to:</p> <ul> <li>Run initial setup of Vault</li> <li>Configure Vault to integrate with LDAP</li> <li>Enable and configure the PKI secrets engine</li> </ul> <p>During initial setup of Vault, the root token and unseal key(s) are saved to <code>/srv/vault/creds</code> folder. Make sure to move these to a safe location after initial setup and use Ansible lookup plugins to retrieve them when needed.</p>"},{"location":"clarified-core-collection/vault/#requirements","title":"Requirements","text":"<ul> <li>Requires an external reverse proxy (nginx, traefik, haproxy, caddy etc.) to handle GUI access and TLS termination.</li> </ul>"},{"location":"clarified-core-collection/vault/#role-variables","title":"Role Variables","text":"<p>Refer to defaults/main.yml for the full list of variables, their default values and descriptions.</p>"},{"location":"clarified-core-collection/vault/#dependencies","title":"Dependencies","text":"<ul> <li>Depends on Docker and Docker Compose being installed on the host. Docker can be installed using the clarified.core.docker role.</li> </ul>"},{"location":"clarified-core-collection/vault/#example","title":"Example","text":"<pre><code># Installing vault with default values and configuring everything manually\n- name: Installing Vault...\n  ansible.builtin.include_role:\n    name: clarified.core.vault\n</code></pre> <pre><code># Installing vault and running initial configuration\n- name: Installing &amp; configuring Vault...\n  ansible.builtin.include_role:\n    name: clarified.core.vault\n    vars:\n      vault_configure: true\n</code></pre> <pre><code># Installing vault and running initial configuration and configuring LDAP\n- name: Installing &amp; configuring Vault with LDAP...\n  ansible.builtin.include_role:\n    name: clarified.core.vault\n    vars:\n      vault_configure: true\n      vault_configure_ldap: true\n      vault_configuration_uri: https://vault.example.com\n      vault_binddn: CN=svc_nexus,OU=Service Accounts,OU=ORG,DC=example,DC=com\n      vault_bindpass: # lookup to a predefined password for the svc_nexus user\n      vault_groupdn: OU=Vault,OU=Groups,OU=ORG,DC=example,DC=com\n      vault_upndomain: example.com\n      vault_ldaps_url: ldaps://dc1.example.com # Can be LDAP or LDAPS\n      vault_userdn: OU=Users,OU=ORG,DC=example,DC=com\n      vault_ldaps_certificate_source: /usr/local/share/ca-certificates/LDAPRootCA.crt # Path or URL to the LDAP server's root CA certificate\n</code></pre> <pre><code># Installing vault and running initial configuration and configuring PKI with default values\n- name: Installing &amp; configuring Vault with PKI...\n  ansible.builtin.include_role:\n    name: clarified.core.vault\n    vars:\n      vault_create_root_ca: true # Create a self-signed root CA\n      vault_create_intermediate_ca: true # Create an intermediate CA (signed by the root CA)\n</code></pre>"},{"location":"clarified-core-collection/vcenter_vmtools_policy/","title":"Role Name","text":"<p>COMING SOON A brief description of the role goes here.</p>"},{"location":"clarified-core-collection/vcenter_vmtools_policy/#requirements","title":"Requirements","text":"<p>COMING SOON Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.</p>"},{"location":"clarified-core-collection/vcenter_vmtools_policy/#role-variables","title":"Role Variables","text":"<p>COMING SOON A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.</p>"},{"location":"clarified-core-collection/vcenter_vmtools_policy/#dependencies","title":"Dependencies","text":"<p>COMING SOON A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.</p>"},{"location":"clarified-core-collection/vcenter_vmtools_policy/#example-playbook","title":"Example Playbook","text":"<p>COMING SOON Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:</p> <pre><code>- hosts: servers\n  roles:\n     - { role: username.rolename, x: 42 }\n</code></pre>"},{"location":"clarified-core-collection/vcenter_vmtools_policy/#license","title":"License","text":"<p>AGPL-3.0-or-later</p>"},{"location":"clarified-core-collection/vcenter_vmtools_policy/#author-information","title":"Author Information","text":"<p>COMING SOON An optional section for the role authors to include contact information, or a website (HTML is not allowed).</p>"},{"location":"clarified-core-collection/win_configure_rdp/","title":"win_configure_rdp","text":"<p>Role for enabling or disabling RDP on Windows hosts.</p>"},{"location":"clarified-core-collection/win_configure_rdp/#requirements","title":"Requirements","text":"<p>None</p>"},{"location":"clarified-core-collection/win_configure_rdp/#role-variables","title":"Role Variables","text":"<p>Check the <code>defaults/main.yml</code> file for the full list of variables.</p>"},{"location":"clarified-core-collection/win_configure_rdp/#dependencies","title":"Dependencies","text":"<p>None</p>"},{"location":"clarified-core-collection/win_configure_rdp/#example","title":"Example","text":"<pre><code># Include the role in tasks\n- name: Name of the task\n  ansible.builtin.include_role:\n    name: clarified.core.win_configure_rdp\n</code></pre> <pre><code># Include the role in meta\n---\n- dependencies:\n    - role: clarified.core.win_configure_rdp\n</code></pre>"},{"location":"clarified-core-collection/win_dc_post_reboot_check/","title":"win_dc_post_reboot_check","text":"<p>Role for waiting for Windows Domain Controller to be ready after reboot. Useful to include in playbooks after DC reboot to avoid errors where Ansible tries to configure DC before it is ready.</p>"},{"location":"clarified-core-collection/win_dc_post_reboot_check/#requirements","title":"Requirements","text":"<p>None</p>"},{"location":"clarified-core-collection/win_dc_post_reboot_check/#role-variables","title":"Role Variables","text":"<p>None</p>"},{"location":"clarified-core-collection/win_dc_post_reboot_check/#dependencies","title":"Dependencies","text":"<p>None</p>"},{"location":"clarified-core-collection/win_dc_post_reboot_check/#example","title":"Example","text":"<pre><code># Include the role in tasks\n- name: Name of the task\n  ansible.builtin.include_role:\n    name: clarified.core.win_dc_post_reboot_check\n</code></pre> <pre><code># Include the role in meta\n---\n- dependencies:\n    - role: clarified.core.win_dc_post_reboot_check\n</code></pre>"},{"location":"clarified-core-collection/win_sysprep/","title":"win_sysprep","text":"<p>This is a role for running sysprep on a Windows host running on vSphere. This is automatically included in the <code>clarified.core.template_os_configuration</code> role, but can be run independently if desired.</p>"},{"location":"clarified-core-collection/win_sysprep/#requirements","title":"Requirements","text":"<p>none</p>"},{"location":"clarified-core-collection/win_sysprep/#role-variables","title":"Role Variables","text":"<p><code>post_sysprep_administrator_password</code> - The password for the Administrator account after sysprep is run. Defaults to current <code>ansible_user</code>.</p>"},{"location":"clarified-core-collection/win_sysprep/#dependencies","title":"Dependencies","text":"<p>none</p>"},{"location":"clarified-core-collection/win_sysprep/#example","title":"Example","text":"<pre><code>- name: Running sysprep...\n  include_role: clarified.core.win_sysprep\n  vars:\n    post_sysprep_administrator_password: \"MyNewPassword\"\n</code></pre>"}]}